@model AnkurUdyogERP.Models.Master

@{
    ViewBag.Title = "DistributerRegistration";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="page-body">
    <div class="container-fluid">
        <div class="page-title">
            <div class="row">
                <div class="col-6">
                    <h3>Distributer Registration</h3>
                </div>
                <div class="col-6">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/Admin/AdminDashboard"><i data-feather="home"></i></a></li>
                        <li class="breadcrumb-item">Distributer</li>
                        <li class="breadcrumb-item active">Distributer Registration</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>
    <!-- Container-fluid starts-->
    <div class="container-fluid">
        <div class="row">
            <div class="col-sm-12">
                <div class="card">
                    <div class="card-header pb-0">
                        <span style="color:red;">@TempData["DistributerRegistration"]</span>
                    </div>
                    <div class="card-body">
                        @using (Html.BeginForm("DistributerRegistration", "Master", FormMethod.Post, new { @id = "form1", enctype = "multipart/form-data" }))
                        {
                            <div class="row g-3">
                                <div class="col-md-3">
                                    <label>Concern Person Name <span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @placeholder = "Name", @onkeypress = "return onlyAlphabets();" })
                                </div>
                                <div class="col-md-3">
                                    <label>Firm Name <span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.FirmName, new { @class = "form-control", @placeholder = "Firm Name", @onkeypress = "return onlyAlphabets();" })
                                </div>
                                <div class="col-md-3 mb-3">
                                    <label>Mobile Number <span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.MobileNo, new { @class = "form-control", @maxlength = "10", @placeholder = "Mobile Number", @onkeypress = "return isNumberKey(event);" })
                                </div>
                                <div class="col-md-3">
                                    <label>Email Id <span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @placeholder = "Email Id" })
                                </div>
                                <div class="col-md-12">
                                    <label>Full Address <span style="color:red;"></span></label>
                                    @Html.TextAreaFor(m => m.Address, new { @class = "form-control", @placeholder = "Address" })
                                </div>
                            @*</div>
                            <div class="row g-3">*@
                                <div class="col-md-3">
                                    <label>Pincode <span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.Pincode, new { @class = "form-control", @maxlength = "6", @placeholder = "PinCode", @onchange = "return GetStateCity();", @onkeypress = "return isNumberKey(event);" })
                                </div>
                                <div class="col-md-3">
                                    <label>State <span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.State, new { @class = "form-control", @placeholder = "State", @readonly = true })
                                </div>
                                <div class="col-md-3 mb-3">
                                    <label>City <span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.City, new { @class = "form-control", @placeholder = "City", @readonly = true })
                                </div>
                                <div class="col-md-3">
                                    <label>PanNo <span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.PanNo, new { @class = "form-control", @maxlength = "10", @placeholder = "PanNo", @onchange = "return validatePan();" })
                                </div>
                                <div class="col-md-6 mb-6">
                                    <label>GSTNO <span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.GSTNO, new { @class = "form-control", @placeholder = "GSTNO" })
                                </div>
                                <div class="col-md-6">
                                    <label>Limit <span style="color:red;">*</span></label>
                                    @Html.TextBoxFor(m => m.Limit, new { @class = "form-control", @placeholder = "Limit", @onkeypress = "return isNumberKey(event);" })
                                </div>
                             
                            </div>
                            if (Model.PK_AdminId != null)
                            {
                                @Html.HiddenFor(m => m.PK_AdminId)
                                <input type="submit" class="btn btn-primary mt-4" value="Update" id="btnUpdate" name="btnUpdate" onclick="return ValidateForm();" />
                            }
                            else
                            {
                                <input type="submit" class="btn btn-primary mt-4" value="Submit" id="btnSave" name="btnSave" onclick="return ValidateForm();" />
                            }
                        }
                        @*< !--Container - fluid Ends-- >*@
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    function ValidateForm() {
        if ($('#Name').val() == '') {
            $("#Name").addClass('errortext');
            $('#Name').focus();
            return false;
        }
        if ($('#FirmName').val() == '') {
            $("#FirmName").addClass('errortext');
            $('#FirmName').focus();
            return false;
        }
        if ($('#MobileNo').val() == '') {
            $("#MobileNo").addClass('errortext');
            $('#MobileNo').focus();
            return false;
        }
        if ($('#Email').val() == '') {
            $("#Email").addClass('errortext');
            $('#Email').focus();
            return false;
        }
        if ($('#Pincode').val() == '') {
            $("#Pincode").addClass('errortext');
            $('#Pincode').focus();
            return false;
        }
        if ($('#PanNo').val() == '') {
            $("#PanNo").addClass('errortext');
            $('#PanNo').focus();
            return false;
        }
        if ($('#GSTNO').val() == '') {
            $("#GSTNO").addClass('errortext');
            $('#GSTNO').focus();
            return false;
        }
        if ($('#Limit').val() == '') {
            $("#Limit").addClass('errortext');
            $('#Limit').focus();
            return false;
        }
        return true;
    }
    function GetStateCity() {
        var PinCode = $("#Pincode").val();
        debugger;
        $.ajax({
            url: '/Employee/GetStateCity', type: 'Post', dataType: 'json',
            data: { PinCode: PinCode },
            success: function (result) {
                if (result.Result == "True") {
                    $("#State").val(result.State);
                    $("#City").val(result.City);
                }
                else {
                    alert("Invailid Pincode");
                    $("#PinCode").addClass('errortext');
                    $("#PinCode").val('');
                    $("#PinCode").focus();
                }
            }
        });
    }
    function onlyAlphabets(e, t) {
        try {
            if (window.event) {
                var charCode = window.event.keyCode;
            }
            else if (e) {
                var charCode = e.which;
            }
            else { return true; }
            if ((charCode > 64 && charCode < 91) || (charCode > 96 && charCode < 123) || (charCode == 32))
                return true;
            else
                return false;
        }
        catch (err) {
            alert(err.Description);
        }
    }
    function isNumberKey(evt) {

        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
        && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }
    function validatePan() {
        var panVal = $('#PanNo').val();
        var regpan = /^([a-zA-Z]){5}([0-9]){4}([a-zA-Z]){1}?$/;

        if (regpan.test(panVal)) {
            $("#PanNo").removeClass('errortext');
        } else {
            alert("Invalid PAN Number");
            $("#PanNo").val('');
            $("#PanNo").addClass('errortext');
        }
    }
</script>
<style>
    .errortext {
        border: 1px solid red !important;
        background-color: #fff0f0 !important;
    }
</style>

