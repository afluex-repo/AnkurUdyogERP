@model AnkurUdyogERP.Models.Distributer

@{
    ViewBag.Title = "OrderRequest";
    Layout = "~/Views/Shared/_DistributerLayoutForAdmin.cshtml";
}

<div class="page-body">
    <div class="container-fluid">
        <div class="page-title">
            <div class="row">
                <div class="col-6">
                    <h3>Booking Request</h3>
                </div>
                <div class="col-6">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/Distributer/DistributerDashboard"><i data-feather="home"></i></a></li>
                        <li class="breadcrumb-item">Distributer</li>
                        <li class="breadcrumb-item active">Booking Request</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>
    <!-- Container-fluid starts-->
    <div class="container-fluid">
        <div class="row">

            @using (Html.BeginForm("OrderRequest", "Distributer", FormMethod.Post, new { @id = "form1", @autocomplete = "off", enctype = "multipart/form-data" }))
            {
                <div class="col-sm-12">
                    <div class="card">
                        <div class="card-header pb-0">
                            <span style="color:red;">@TempData["msg"]</span>
                        </div>

                        <div class="card-body">
                            <div class="row g-3">
                                <div class="col-md-3">
                                    <label>Today's Pending Limit</label>
                                    <input type="text" id="PendingLimit" name="PendingLimit" class="form-control" placeholder="Today's Pending Limit" value="@ViewBag.PendingLimit" readonly=true , oninput="return checkLimit();" />
                                </div>
                            </div>

                            <div class="table table-responsive">
                                <table class="table table-responsive table-striped table-bordered">
                                    <thead>
                                        <tr>
                                            @*<th width="120px">Today's Pending Limit</th>*@
                                            <th width="120px">Dealer<span style="color:red;">*</span></th>
                                            @*<th width="120px">Section<span style="color:red;">*</span></th>*@
                                            <th width="110px">Rate (Per Ton)</th>
                                            <th>Booking Quantity (Per Ton)<span style="color:red;">*</span></th>
                                            @*<th>Quintal</th>
                                                <th>Ton</th>*@
                                            <th>Amount</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody id="TextBoxContainer">
                                        <tr class="mycontainer" id="mainrow">
                                            @*<td style="min-width:200px">
                                                    <input type="text" id="PendingLimit" name="PendingLimit" class="PendingLimit form-control" placeholder="Today's Pending Limit" value="@ViewBag.PendingLimit" readonly="readonly" , oninput="return checkLimit();" />
                                                </td>*@
                                            <td>
                                                @*@Html.DropDownListFor(m => m.Dealer, new SelectList(ViewBag.ddldealer, "Value", "Text"), new { @class = "Dealer form-control select2", @style = "min-width:180px" })
                                                <span class="error"> Select Dealer</span>*@
                                                

                                @Html.TextBoxFor(m => m.Dealer, new { @class = "Dealer form-control select2 ui-autocomplete-input", @Placeholder = "Dealer Name", @style = "min-width:180px;position:relative" })
                                                @Html.HiddenFor(m =>m.DealerId, new { @class = "DealerId" })
                                                <span class="error"> Select Dealer</span>
                                            </td>
                                            <td style="min-width:150px">
                                                <input type="text" id="Rate" name="Rate" class="Rate form-control" placeholder="Rate" value="@ViewBag.DailyRate" readonly="readonly" />
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(m => m.OrderQuantity, new { @class = "OrderQuantity form-control", @placeholder = "Order Quantity (per/kg)", @onkeypress = "return isNumberKey(event);", @onchange = "return changeOrderQuantity();", @style = "min-width:150px" })
                                                <span class="error">OrderQuantity</span>
                                            </td>
                                            <td>
                                                @Html.TextBoxFor(m => m.Amount, new { @class = "Amount form-control", @placeholder = "Amount ", @readonly = true, @style = "min-width:150px" })
                                            </td>

                                            <td>
                                                <input type="button" id="add" data-toggle="tooltip" data-original-title="Add" value="Add" style="width:80px" class="btn btn-success" />
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                                <div id="orderItems">
                                    <table class="table table-responsive" id="orderdetailsItems"></table>
                                    <span id="orderItemError" style="color:red"></span>
                                </div>
                            </div>
                            <br />
                            <div class="form-group row">
                                <div class="col-md-4 col-lg-4">
                                    <input id="submit" type="button" value="Booking Request" class="btn btn-warning" />
                                    @*<a class="btn btn-info" href="/Distributer/OrderRequestList" id="btn_View" style="margin-left:5px;">Back To List</a>*@
                                </div>
                            </div>
                            <input type="hidden" id="UserType" value="@Session["UserType"]" />
                            <input type="hidden" id="UserTypeName" value="@Session["UserTypeName"]" />
                        </div>

                    </div>
                </div>
            }

            <div class="col-lg-12">
                <div class="card">
                    <div class="card-body">
                        <div class="dt-ext table-responsive mt-4">
                            <table class="display" id="data-source-1" style="width:100%">
                                <thead>
                                    <tr>
                                        <th>S.No.</th>
                                        @*<th>Pending Limit</th>*@
                                        <th>Dealer</th>
                                        @*<th>Section</th>*@
                                        <th>Rate (Per Ton)</th>
                                        <th>Booking Quantity (Per Ton)</th>
                                        <th>Total Amount</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (Model != null)
                                    {
                                        if (Model.lstrequest != null)
                                        {
                                            int i = 1;
                                            foreach (var Item in Model.lstrequest)
                                            {
                                                if (i < 51)
                                                {
                                                    <tr>
                                                        <td>@i</td>
                                                        @*<td>@Item.PendingLimit</td>*@
                                                        <td>@Item.Dealer</td>
                                                        @*<td>@Item.Section</td>*@
                                                        <td>@Item.Rate</td>
                                                        <td>@Item.OrderQuantity</td>
                                                        <td>@Item.TotalAmount</td>
                                                    </tr>
                                                    i++;
                                                }
                                            }
                                                @*<tr>
                                                    <td colspan="3"><a href="~/Distributer/OrderRequestList" class="btn btn-primary" style="float:right">view more..</a></td>
                                                </tr>*@

                                        }
                                    }
                                   
                                </tbody>

                            </table>
                            <a href="~/Distributer/OrderRequestList" class="btn btn-primary mb-4" style="float:right">View more..</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Container-fluid Ends-->
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        debugger;
        $("#divload").css({ 'display': 'none' });
        var UserType = $('#UserType').val();
        var UserTypeName = $('#UserTypeName').val();
        if (UserType == 'Admin' && UserTypeName != 'Admin' && UserTypeName != "") {
            GetMenuDetails();
        }

        $("input").attr("autocomplete", "off");
        var cityuse = [];
        $("#loader").css({ 'display': '' });
        $.ajax({
            url: '/Distributer/DealerListForAutoSearch',
            type: 'Post',
            success: function (response) {
                debugger;
                if (response != null) {
                    $(response).each(function (index, item) {
                        cityuse.push(item.DealerName + "(" + item.PK_DealerId + ")");
                    });
                    debugger;
                    $('#Dealer').autocomplete({
                        source: cityuse,
                        select: function (event, ui) {
                            var str = ui.item.label;
                            var strsplit = str.split("(");

                            $('#DealerId').val(strsplit[1].substr(0, strsplit[1].length - 1));
                        }
                    })
                }
            }, error: function () {
                alert('Some Thing wrong!');
                $("#loader").css({ 'display': 'none' });
            }
        });


        //Add button click event
        $('#add').click(function () {
            debugger
            //validation and add order items
            var today = new Date();
            var time = today.getHours() + ":" + today.getMinutes() + ":" + today.getSeconds();
            var isAllValid = true;

            if ($('#Dealer').val() == '') {
                isAllValid = false;
                $('#Dealer').siblings('span.error').css('visibility', 'visible');
            }
            if ($('#OrderQuantity').val() == '') {
                isAllValid = false;
                $('#OrderQuantity').siblings('span.error').css('visibility', 'visible');
            }
            if ($('#Amount').val() == '' || $('#Amount').val() == "0") {
                isAllValid = false;
                alert("Amount should be grater than 0 !!");
                $("#Amount").addClass('errortext');
                $('#Amount').focus();
            }
            debugger
            if (isAllValid) {
                //var datetime = date.concat(" ", time);
                //alert(datetime);
                var $newRow = $('#mainrow').clone().removeAttr('id');
                $('.Dealer', $newRow).prop('disabled', true).val($('#Dealer').val());
                $('.Rate', $newRow).prop('disabled', true).val($('#Rate').val());
                $('.OrderQuantity', $newRow).prop('disabled', true).val($('#OrderQuantity').val());
                $('.Amount', $newRow).prop('disabled', true).val($('#Amount').val());
                                
                //Replace add button with remove button
                $('#add', $newRow).addClass('remove').val('Remove').removeClass('btn-success').addClass('btn-danger');

                //remove id attribute from new clone row
                $('#Dealer,#Rate,#OrderQuantity,#Amount,#add', $newRow).removeAttr('id');
                $('span.error', $newRow).remove();
                //append clone row
                $('#orderdetailsItems').append($newRow);

                //clear select data
                $('#orderdetailsItems .ThToTransactionMode').removeClass("ThToTransactionMode");
                $('#Dealer,#OrderQuantity,#Amount').val('0');
                $('#Dealer').val('');
                $('#OrderQuantity').val('');
                $('#orderItemError').empty();

            }

        })
        //remove button click event
        $('#orderdetailsItems').on('click', '.remove', function () {
            $(this).parents('tr').remove();
        });
        $('#submit').click(function () {
            debugger;
            var isAllValid = true;
            $("#divload").css({ 'display': 'none' });
            $('#orderItemError').text('');
            var list = [];

            var errorItemCount = 0;
            $('#orderdetailsItems tr').each(function (index, ele) {
                if (
                    $('select.Dealer', this).val() == "0"
                    ) {
                    errorItemCount++;
                    $(this).addClass('error');
                    $("#divload").css({ 'display': 'none' });
                } else {
                    var orderItem = {
                        Dealer: $('.DealerId', this).val(),
                        Rate: $('.Rate', this).val(),
                        OrderQuantity: $('.OrderQuantity', this).val(),
                        Amount: $('.Amount', this).val()
                    }
                    list.push(orderItem);
                }

            })
            console.log(list)

            if (errorItemCount > 0) {
                $('#orderItemError').text(errorItemCount + " Invalid entry in list.");
                isAllValid = false;
                $("#divload").css({ 'display': 'none' });
            }

            if (list.length == 0) {
                $('#orderItemError').text('At least 1  row required.');
                isAllValid = false;
                $("#divload").css({ 'display': 'none' });
            }

            if (isAllValid) {
                var data = {
                    OrderRequest: JSON.stringify(list)
                }
                $("#divload").css({ 'display': 'block' });
                debugger
                $.ajax({
                    type: 'post',
                    url: '/Distributer/OrderRequestAction',
                    dataType: 'json',
                    data: JSON.stringify({ dataValue: JSON.stringify(data) }),
                    contentType: 'application/json',
                    success: function (data) {
                        if (data.status == "Yes") {
                            $("#divload").css({ 'display': 'block' });
                            alert('Booking Request Successfully saved');
                            //here we will clear the form
                            list = [];
                            window.location.href = '@Url.Action("OrderRequest", "Distributer")';
                            $('#Dealer,#Rate,#OrderQuantity,#Amount').val('0');
                            $('#Dealer,#Rate,#OrderQuantity,#Amount').val('');
                            $('#orderdetailsItems').empty();
                            $('#orderdetailsItems').hide();
                        }

                        else {
                            console.log(data.status)
                            alert(data.status);
                        }
                        $('#submit').text('Save');
                    },
                    error: function (error) {
                        console.log(error);
                        $('#submit').text('Save');
                    }
                });
                $('#submit').text('Save');
            }
        });
    });

    function ValidateForm() {
        if ($('#Dealer').val() == '0') {
            $("#Dealer").addClass('errortext');
            $('#Dealer').focus();
            return false;
        }
        if ($('#Section').val() == '') {
            $("#Section").addClass('errortext');
            $('#Section').focus();
            return false;
        }
        if ($('#OrderQuantity').val() == '') {
            $("#OrderQuantity").addClass('errortext');
            $('#OrderQuantity').focus();
            return false;
        }
        return true;
    }
    function isNumberKey(evt) {

        var charCode = (evt.which) ? evt.which : event.keyCode;
        if (charCode != 46 && charCode > 31
          && (charCode < 48 || charCode > 57))
            return false;

        return true;
    }

    function changeSection() {
        $("#divload").css({ 'display': '' });
        debugger;
        var Section = $('#Section').val();

        $.ajax({
            url: '/Distributer/GetSectionDetails', type: 'post', dataType: 'json',
            data: { 'Section': Section },
            success: function (data) {

                $("#divload").css({ 'display': 'none' });
                if (data.Result == "yes") {
                    $("#Rate").val(data.Rate);
                }
                else if (data.Result == "no") {
                    alert("This Section not found !!");
                    $("#Section").addClass('errortext');
                    $('#Section').focus();

                }
            }
        });
    }

    function changeOrderQuantity() {
        $("#divload").css({ 'display': '' });
        $(".errortext").removeClass("errortext");
        debugger;
        var OrderQuantity = $('#OrderQuantity').val();
        var Rate = $('#Rate').val();

        if (Number(OrderQuantity) == "" || Number(OrderQuantity) == null) {
            $("#OrderQuantity").val("");
            $("#OrderQuantity").addClass('errortext');
            $('#OrderQuantity').focus();
            $("#OrderQuantity").css({ 'display': 'none' });
            return false;
        }
        else {
            var OrderQuantity = $('#OrderQuantity').val();
            var Rate = $('#Rate').val();
        }

        if (Amount == "") {
            Amount = 0;
        }
        else {
            var Amount = ((Number(OrderQuantity) * Number(Rate)))
        }


        $("#Amount").val(Amount);
        var PendingLmt = $("#PendingLimit").val();
        var extPendingLmt = "2";
        var pendinglmt = ((Number(PendingLmt) + Number(extPendingLmt)))

        if ((Number(pendinglmt)) < (Number(OrderQuantity))) {
            alert("Daily Limit is Over. Booking Quantity should be less than or equal to Pending Limit !!");
            $("#PendingLimit").addClass("errortext");
            $("#Quintal").addClass("errortext");
            $("#OrderQuantity").val("");
            $("#Quintal").val("");
            $("#Ton").val("");
            $("#PendingLimit").focus();
            $("#Quintal").focus();
        }
    }

    function GetMenuDetails() {
        debugger
        var URL = "/Distributer/OrderRequestList";
        $.ajax({
            type: "POST",
            url: "/Master/GetMenuDetails",
            data: { URL: URL },
            dataType: "json",
            //contentType: 'application/json; charset=utf-8',
            success: function (data) {
                var obj = jQuery.parseJSON(data);
                console.log(obj)
                for (var i = 0; i < obj.length; i++) {
                    if (obj[i].FormSave == true) {
                        $('#submit').show();
                        $("#submit").removeAttr('disabled');
                    }
                    else {
                        $('#submit').hide();
                        $("#submit").attr('disabled', 'disabled');
                    }
                    debugger
                    if (obj[i].FormView == true) {
                        $('#btn_View').show();
                        $("#btn_View").removeAttr('disabled');
                    }
                    else {
                        $('#btn_View').hide();
                        $("#btn_View").attr('disabled', 'disabled');
                    }
                }
            },
            error: function () {
                alert("Error occured!!")
            }
        });
    }

   
</script>
<style>
    .errortext {
        border: 1px solid red !important;
        background-color: #fff0f0 !important;
    }

    span.error, error1 {
        display: block;
        visibility: hidden;
        color: red;
        font-size: 90%;
    }

    tr.error, error1 {
        background-color: rgba(255,0,0,0.35);
    }

    span.error1 {
        display: block;
        visibility: hidden;
        color: red;
        font-size: 90%;
    }

    tr.error1 {
        background-color: rgba(255,0,0,0.35);
    }
</style>

